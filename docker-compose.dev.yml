version: "3"

services:
  ckan-dev:
    container_name: ckan_dev
    build:
      context: ckan/
      dockerfile: Dockerfile.dev
      args:
        - TZ=${TZ}
    env_file:
      - .env
    links:
      - db
      - solr
      - redis
      - datapusher
    ports:
      - "5000:5000"
    volumes:
      - ./src:/srv/app/src_extensions
      - ckan_storage:/var/lib/ckan
      - "./ckan_config/production.ini:/srv/app/production.ini"

  datapusher:
    container_name: datapusher
    build:
      context: datapusher/
    ports:
      - "8800:8800"

  db:
    container_name: db
    env_file:
      - .env
    build:
      context: postgresql/
    environment:
      - PGDATA=/var/lib/postgresql/data/db
    volumes:
      - pg_data:/var/lib/postgresql/data

  solr:
    container_name: solr
    build:
      context: solr/
    ports:
      - "8983:8983"
    volumes:
      - solr_data:/opt/solr/server/solr/ckan/data/index

  redis:
    container_name: redis
    image: redis:alpine
  # keycloak:
  #   image: quay.io/keycloak/keycloak:latest
  #   container_name: ckan-keycloak
  #   environment:
  #     PROXY_ADDRESS_FORWARDING: "true"
  #     DB_VENDOR: POSTGRES
  #     DB_ADDR: postgres
  #     DB_DATABASE: keycloak
  #     DB_USER: keycloak
  #     DB_SCHEMA: public
  #     DB_PASSWORD: pg_pwd_342#54
  #     KEYCLOAK_USER: admin
  #     KEYCLOAK_PASSWORD: key_pwd_876#34
  #     KEYCLOAK_FRONTEND_URL: http://localhost:8080/auth
  #     # Uncomment the line below if you want to specify JDBC parameters. The parameter below is just an example, and it shouldn't be used in production without knowledge. It is highly recommended that you read the PostgreSQL JDBC driver documentation in order to use it.
  #     #JDBC_PARAMS: "ssl=true"
  #   ports:
  #     - 8080:8080
  #   depends_on:
  #     - postgres

volumes:
  ckan_storage: null
  pg_data: null
  solr_data: null
